name: release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write   # This is required to create/push the new git tag

jobs:
  build:

    runs-on: windows-latest

    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        rid: [win-x64, linux-x64, linux-arm]
        include:
          - os: windows-latest
            rid: win-x64
          - os: ubuntu-latest
            rid: linux-x64
          - os: ubuntu-latest
            rid: linux-arm

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore --configuration Release
    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release
    - name: Publish single-file executable
      run: dotnet publish GCS.CLI -r ${{ matrix.rid }} -c Release /p:PublishSingleFile=true /p:PublishTrimmed=true --output ./output/${{ matrix.rid }}

    - name: Publish and Zip UI artifacts (Windows Only)
      if: matrix.os == 'windows-latest'
      run: |
        dotnet publish GCS.CLI -r ${{ matrix.rid }} -c Release /p:PublishSingleFile=true --output ./output/${{ matrix.rid }}-ui
        Compress-Archive -Path ./output/${{ matrix.rid }}-ui/* -DestinationPath ./output/GCS-UI${{github.ref_name}}.zip

    - name: Create GitHub Release
      if: matrix.os == 'windows-latest'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Zip UI Asset (Windows Only)
      if: matrix.os == 'windows-latest'
      id: upload-ui-asset-zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: output/GCS-UI${{github.ref_name}}.zip
        asset_name: GCS-UI${{github.ref_name}}.zip
        asset_content_type: application/zip

    - name: Upload Windows Single File
      if: matrix.os == 'windows-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: output/win-x64/GCS.CLI.exe
        asset_name: GCS.CLI-win-x64.exe
        asset_content_type: application/octet-stream

    - name: Upload Linux Single File
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: output/linux-x64/GCS.CLI
        asset_name: GCS.CLI-linux-x64
        asset_content_type: application/octet-stream

    - name: Upload Linux ARM Single File
      if: matrix.rid == 'linux-arm'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: output/inux-arm/GCS.CLI
        asset_name: GCS.CLI-linux-arm
        asset_content_type: application/octet-stream
