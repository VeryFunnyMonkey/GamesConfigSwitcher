name: Create Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  once:
    name: Create GitHub release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create a release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true

  build:
    name: Create cross-platform release build, tag and upload binaries
    needs: once
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        runtime: [win-x64, win-arm64, linux-x64, linux-arm64, osx-x64, osx-arm64]
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore --configuration Release
    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release
    - name: Publish single-file executable
      run: dotnet publish GCS.CLI -r ${{ matrix.runtime }} -c Release /p:PublishSingleFile=true /p:PublishTrimmed=true --output ./output/${{ matrix.runtime }}
    
    - name: Publish and Zip UI artifacts (Windows Only)
      if: matrix.runtime == 'win-x64'
      run: |
        dotnet publish GCS.CLI -r ${{ matrix.runtime }} -c Release /p:PublishSingleFile=true --output ./output/${{ matrix.runtime }}-ui
        cd ./output && zip -r GCS-UI${{ github.ref_name }}.zip ${{ matrix.runtime }}-ui

    - name: Determine file extension
      id: file_ext
      run: |
        if [[ "${{ matrix.runtime }}" == "win-"* ]]; then
          echo "file_ext=.exe" >> $GITHUB_ENV
        else
          echo "file_ext=" >> $GITHUB_ENV
        fi

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.once.outputs.upload_url }}
        asset_path: ./output/${{ matrix.runtime }}/gcs${{ env.file_ext }}
        asset_name: gcs-${{ matrix.runtime }}${{ env.file_ext }}
        asset_content_type: application/octet-stream

    - name: Upload UI Asset
      if: matrix.runtime == 'win-x64'
      id: upload-ui-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.once.outputs.upload_url }}
        asset_path: ./output/GCS-UI${{github.ref_name}}.zip
        asset_name: GCS-UI${{github.ref_name}}.zip
        asset_content_type: application/zip